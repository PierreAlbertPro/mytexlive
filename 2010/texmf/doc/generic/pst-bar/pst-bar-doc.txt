Abstract With pst-bar, one may use pstricks to produce bar charts directly from a data file. This package is still very much beta software, and this documentation is little more than a crib sheet providing limited explanation of pst-bar's features. The usual caveats pertaining to beta software (use at your own risk, command and option names may change, etc.) apply. Additional features and improved (in both content and layout) documentation will be provided as the code stabilizes.

1

Drawing a Bar Chart

Version 0.5 of pst-bar provides commands for reading data from a commadelimited file and 
using it to produce one of three different types of bar charts.

1.1

Reading the Data File
\readpsbardata[<options>]{<data>}{<filename>}

Use the command \readpsbardata to read from a data file:

For the data, simply specify a macro name not currently in use. The available options are: 
Parameter header Definition true if first line of data file is header row false otherwise Default: true

1


1.2

Creating the Chart

The command \psbarchart creates the bars for the bar chart. Bars are grouped in columns that 
are one \psxunit wide, and the number of bars appearing in a single column is equal to the number 
of data rowsin the data file. (A data row is defined as any row after the first if header is true. 
It also includes the first row if header is false.) It labels the bottom of each column with the 
headers from the data file if header was set to to true during \readpsbardata. It only creates 
the bars and the column labels -- axes and frames must be provided separately. 
\psbarchart[<options>]{<data>} For the data, use the same macro name supplied to 
\readpsbardata for data. The available options are: Parameter chartstyle Definition 
cluster produces a cluster of bars stack stacks the cluster into a single column block 
prints a "floating" bar with a nonzero minimum Default: cluster Name(s) of bar style(s) 
to use for each bar Default: {} Factor determining whitespace between columns Default: 
0.4 Factor determining whitespace between bars (cluster and block charts) Default: 
0.0 Angle of rotation of the column labels Default: 0

barstyle barcolsep barsep

barlabelrot

Note that the default barstyle will cause an error in the Postscript interpreter. The number of barstyles specified must equal or exceed the number of bar segments in each column. For the cluster and stack chartstyles, this is equal to the number of data rows in the data file; for the block chartstyle, it is equal to half the number of data rows. See Section 2 for further details on the data file. The barstyles available by default are red, green, blue, black, white, gray, lightgray, and darkgray. Each of these plots a bar of the named color with square corners and a black outline.

1.3

Customizing the Chart

To add a custom bar style, use the command \newpsbarstyle,

2


\newpsbarstyle{<name>}{<definition>} The name is a text string not currently 
used by any other barstyle, and the definition may consist of any pstricks 
key or group of keys applicable to \psframe. For example, the red barstyle is 
defined as \newpsbarstyle{red}{fillcolor=red,fillstyle=solid,% framearc=0} To 
customize the type used to set the column labels, redefine \psbarlabel. 
For example, to have the label set in small italics, use \renewcommand*{\psbarlabel}{\small\itshape} 
To adjust the spacing between the bars and the column labels, redefine \psbarlabelsep. 
By default it is 0pt. Finally, the data from the file may be scaled and 
manipulated using the command \psbarscale, \psbarscale(<scale>){<Postscript code>} 
inspired by Herbert Voss' pstScale from pstricks-add. The data are 
scaled by the value in parentheses and may be further manipulated with 
Postscript code. For example, to take the logarithm of the input data 
one would use \psbarscale(1){log}.

2

The Data File

The data file is a simple comma-delimited file. If header is true, the values on the 
first line will be used to label the chart columns. If header is false, the 
first line is considered data. The interpretation of each line of data depends 
upon the chartstyle. Warning: No checking is done to ensure the data are numeric! 
Non-numeric data outside of the header wil l result in Postscript errors!

2.1

cluster

For a cluster chart, each comma-delimited variable within a given row represents a bar in a different column. Each row represents a new set of bars. Thus the file Set 1, Set 2, Set 3 1, 2, 3 1, 2, 3

3


produces the bars

Set 1

Set 2

Set 3

\psset{unit=0.5in}% \begin{pspicture}(0,0)(2,3)% \readdata{\data}{\example1.csv}% \psbarchart[barstyle={red,blue}]{\data}% \end{pspicture}

2.2

stack

For a stack chart, each column of the chart has only one bar. This bar consists of as many segments as the data file has data rows, with the data from each row stacked onto the previous row. Thus, the file Set 1, Set 2, Set 3 1, 2, 3 0.5, 1.5, 1 produces the bars

Set 1 4

Set 2

Set 3


\psset{unit=0.5in}% \begin{pspicture}(0,0)(2,4)% \readdata{\data}{\example2.csv}% \psbarchart[barstyle={red,blue},chartstyle=stack]{\data}% \end{pspicture}

2.3

block

For a block chart, each bar represents a range of values. As such, each bar requires two data lines from the data file, one denoting the upper limit and the other the lower limit. If there are multiple pairs of data lines, they are plotted in a clustered fashion. If there are an odd number of data lines, the last line of the data file is ignored. Thus, the file Set 1, Set 2, Set 3 1, 2, 3 0.5, 1.5, 1 0.75, 1.6, 0.9 0.9, 2.2, 2.5 produces the bars

Set 1

Set 2

Set 3

\psset{unit=0.5in}% \begin{pspicture}(0,0)(2,3)% \readdata{\data}{\example3.csv}% \psbarchart[barstyle={red,blue},chartstyle=block]{\data}% \end{pspicture}

5


